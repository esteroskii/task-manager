// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TaskAsigment.Models;

namespace TaskAsigment.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20210315055954_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("TaskAsigment.Models.Assignment", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<long>("projectId")
                        .HasColumnType("bigint")
                        .HasColumnName("project_id");

                    b.Property<string>("stateId")
                        .HasColumnType("text")
                        .HasColumnName("state_id");

                    b.Property<long?>("stateid")
                        .HasColumnType("bigint")
                        .HasColumnName("stateid");

                    b.HasKey("id")
                        .HasName("pk_tasks");

                    b.HasIndex("projectId")
                        .HasDatabaseName("ix_tasks_project_id");

                    b.HasIndex("stateid")
                        .HasDatabaseName("ix_tasks_stateid");

                    b.ToTable("tasks");
                });

            modelBuilder.Entity("TaskAsigment.Models.Project", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<long>("userId")
                        .HasColumnType("bigint")
                        .HasColumnName("user_id");

                    b.HasKey("id")
                        .HasName("pk_projects");

                    b.HasIndex("userId")
                        .HasDatabaseName("ix_projects_user_id");

                    b.ToTable("projects");
                });

            modelBuilder.Entity("TaskAsigment.Models.State", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<long>("projectId")
                        .HasColumnType("bigint")
                        .HasColumnName("project_id");

                    b.HasKey("id")
                        .HasName("pk_states");

                    b.HasIndex("projectId")
                        .HasDatabaseName("ix_states_project_id");

                    b.ToTable("states");
                });

            modelBuilder.Entity("TaskAsigment.Models.User", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("email")
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("password")
                        .HasColumnType("text")
                        .HasColumnName("password");

                    b.HasKey("id")
                        .HasName("pk_users");

                    b.ToTable("users");
                });

            modelBuilder.Entity("TaskAsigment.Models.Assignment", b =>
                {
                    b.HasOne("TaskAsigment.Models.Project", "project")
                        .WithMany("tasks")
                        .HasForeignKey("projectId")
                        .HasConstraintName("fk_tasks_projects_project_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TaskAsigment.Models.State", "state")
                        .WithMany()
                        .HasForeignKey("stateid")
                        .HasConstraintName("fk_tasks_states_stateid");

                    b.Navigation("project");

                    b.Navigation("state");
                });

            modelBuilder.Entity("TaskAsigment.Models.Project", b =>
                {
                    b.HasOne("TaskAsigment.Models.User", "user")
                        .WithMany("projects")
                        .HasForeignKey("userId")
                        .HasConstraintName("fk_projects_users_user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("TaskAsigment.Models.State", b =>
                {
                    b.HasOne("TaskAsigment.Models.Project", "project")
                        .WithMany("states")
                        .HasForeignKey("projectId")
                        .HasConstraintName("fk_states_projects_project_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("project");
                });

            modelBuilder.Entity("TaskAsigment.Models.Project", b =>
                {
                    b.Navigation("states");

                    b.Navigation("tasks");
                });

            modelBuilder.Entity("TaskAsigment.Models.User", b =>
                {
                    b.Navigation("projects");
                });
#pragma warning restore 612, 618
        }
    }
}
